diff --git a/arch/x86/kernel/smpboot.c b/arch/x86/kernel/smpboot.c
index 24d57f7..14fc2ee 100644
--- a/arch/x86/kernel/smpboot.c
+++ b/arch/x86/kernel/smpboot.c
@@ -369,6 +369,7 @@ static void primarily_use_numa_for_topology(void)
 	set_sched_topology(numa_inside_package_topology);
 }
 
+extern int sched_max_numa_distance;
 void set_cpu_sibling_map(int cpu)
 {
 	bool has_smt = smp_num_siblings > 1;
@@ -429,7 +430,12 @@ void set_cpu_sibling_map(int cpu)
 			} else if (i != cpu && !c->booted_cores)
 				c->booted_cores = cpu_data(i).booted_cores;
 		}
+#ifndef CONFIG_NUMA
 		if (match_die(c, o) && !topology_same_node(c, o))
+#else
+        if (match_die(c, o) && !topology_same_node(c, o)
+            && sched_max_numa_distance == -1)
+#endif
 			primarily_use_numa_for_topology();
 	}
 }
diff --git a/kernel/sched/core.c b/kernel/sched/core.c
index a74073f8..2bf7f88 100644
--- a/kernel/sched/core.c
+++ b/kernel/sched/core.c
@@ -6506,7 +6506,7 @@ static void claim_allocations(int cpu, struct sched_domain *sd)
 static int sched_domains_numa_levels;
 enum numa_topology_type sched_numa_topology_type;
 static int *sched_domains_numa_distance;
-int sched_max_numa_distance;
+int sched_max_numa_distance = -1;
 static struct cpumask ***sched_domains_numa_masks;
 static int sched_domains_curr_level;
 #endif
